{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dev%20Kumar/OneDrive/Desktop/savior/smart-tourist-safety-system/frontend/landing/contexts/ThemeContext.js"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // 1. Initialize state to a default value (e.g., false)\n  const [darkMode, setDarkMode] = useState(false);\n\n  // 2. Use useEffect to safely access localStorage on the client\n  useEffect(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    // Only set state if a value was found in localStorage\n    if (savedMode !== null) {\n      setDarkMode(JSON.parse(savedMode));\n    }\n  }, []); // Empty array ensures this runs only once on mount\n\n  // 3. Update localStorage whenever darkMode changes\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"names":[],"mappings":";;;;;;;AAEA;;;AAFA;;AAIO,MAAM,6BAAe,IAAA,6OAAa;AAElC,MAAM,gBAAgB;QAAC,EAAE,QAAQ,EAAE;;IACxC,uDAAuD;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,wOAAQ,EAAC;IAEzC,+DAA+D;IAC/D,IAAA,yOAAS;mCAAC;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,sDAAsD;YACtD,IAAI,cAAc,MAAM;gBACtB,YAAY,KAAK,KAAK,CAAC;YACzB;QACF;kCAAG,EAAE,GAAG,mDAAmD;IAE3D,mDAAmD;IACnD,IAAA,yOAAS;mCAAC;YACR,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;YAChD,IAAI,UAAU;gBACZ,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACzC,OAAO;gBACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5C;QACF;kCAAG;QAAC;KAAS;IAEb,MAAM,iBAAiB;QACrB,YAAY,CAAA,WAAY,CAAC;IAC3B;IAEA,qBACE,4PAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAU;QAAe;kBACtD;;;;;;AAGP;GAhCa;KAAA","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dev%20Kumar/OneDrive/Desktop/savior/smart-tourist-safety-system/frontend/landing/contexts/AuthContext.js"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// This URL should point to your API Gateway\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\nconst AUTH_SERVICE_ENDPOINT = `${API_URL}/api/auth`;\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  // Safely get the token from localStorage on the client-side\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      setLoading(false); // No token, so we're done loading\n    }\n  }, []);\n\n  // This effect automatically handles setting headers and verifying the token\n  useEffect(() => {\n    const verifyToken = async (tokenToVerify) => {\n      try {\n        axios.defaults.headers.common['x-auth-token'] = tokenToVerify;\n        const res = await axios.get(`${AUTH_SERVICE_ENDPOINT}/verify`);\n        \n        setIsAuthenticated(true);\n        setUser(res.data.user); // Assumes backend sends { user: {...} }\n        setIsAdmin(res.data.user.isAdmin || false);\n      } catch (err) {\n        localStorage.removeItem('token');\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (token) {\n      verifyToken(token);\n    }\n  }, [token]);\n  \n  const login = async (phone, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.post(`${AUTH_SERVICE_ENDPOINT}/login`, { phone, password });\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token); // This will trigger the useEffect to verify\n      }\n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      throw err;\n    }\n  };\n  \n  const register = async (userData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.post(`${AUTH_SERVICE_ENDPOINT}/register`, userData);\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n      }\n      return res.data;\n    } catch (err) {\n        setError(err.response?.data?.message || 'Registration failed');\n        throw err;\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    setIsAdmin(false);\n    delete axios.defaults.headers.common['x-auth-token'];\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, isAuthenticated, user, loading, error, isAdmin, register, login, logout, setError }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dev%20Kumar/OneDrive/Desktop/savior/smart-tourist-safety-system/frontend/landing/providers/ClientAuthProvider.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useContext } from 'react';\r\nimport { usePathname, useRouter } from 'next/navigation';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport default function ClientAuthProvider({ children }) {\r\n  const { isAuthenticated, loading } = useContext(AuthContext);\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n\r\n  // 1. While loading, show a loading screen to prevent redirects\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 2. If finished loading and user is NOT authenticated,\r\n  // and they are trying to access a protected page...\r\n  if (!isAuthenticated && pathname.startsWith('/dashboard')) {\r\n    // Redirect them to the authentication page\r\n    router.push('/auth');\r\n    return null; // Render nothing while redirecting\r\n  }\r\n\r\n  // 3. If finished loading and user IS authenticated,\r\n  // and they are on the auth page...\r\n  if (isAuthenticated && pathname.startsWith('/auth')) {\r\n    // Redirect them to their dashboard\r\n    router.push('/dashboard');\r\n    return null; // Render nothing while redirecting\r\n  }\r\n\r\n  // 4. If none of the above, render the page\r\n  return children;\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,mBAAmB,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IACzC,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,IAAA,0OAAU,EAAC,wMAAW;IAC3D,MAAM,WAAW,IAAA,mNAAW;IAC5B,MAAM,SAAS,IAAA,iNAAS;IAExB,+DAA+D;IAC/D,IAAI,SAAS;QACX,qBACE,4PAAC;YAAI,WAAU;sBACb,cAAA,4PAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,wDAAwD;IACxD,oDAAoD;IACpD,IAAI,CAAC,mBAAmB,SAAS,UAAU,CAAC,eAAe;QACzD,2CAA2C;QAC3C,OAAO,IAAI,CAAC;QACZ,OAAO,MAAM,mCAAmC;IAClD;IAEA,oDAAoD;IACpD,mCAAmC;IACnC,IAAI,mBAAmB,SAAS,UAAU,CAAC,UAAU;QACnD,mCAAmC;QACnC,OAAO,IAAI,CAAC;QACZ,OAAO,MAAM,mCAAmC;IAClD;IAEA,2CAA2C;IAC3C,OAAO;AACT;GAhCwB;;QAEL,mNAAW;QACb,iNAAS;;;KAHF","debugId":null}}]
}